import numpy as np
import matplotlib.pyplot as plt


def parse_hex_data(hex_data):
    """
    Parse the hex data into a 2D NumPy array of 16-bit integers.
    
    Parameters:
        hex_data (str): Multiline string with hexadecimal values.
    
    Returns:
        numpy.ndarray: 2D array of 16-bit integers.
    """
    # Split the data into lines
    lines = hex_data.strip().split('\n')
    lines = [line.strip() for line in hex_data.strip().split('\n')]

    # Parse each line
    parsed_data = []
    for line in lines:
        # Split the line into 4-character chunks (16-bit hex values)
        row = [int(line[i:i + 4], 16) for i in range(0, len(line), 4)]
        parsed_data.append(row)

    # Convert to a NumPy array
    return np.array(parsed_data, dtype=np.uint16)


def plot_heatmap(data, title="Heatmap", cmap="viridis", output_file=None):
    """
    Plots a heatmap from a 2D array of integers.
    
    Parameters:
        data (numpy array): 2D array of 16-bit integers.
        title (str): Title of the heatmap.
        cmap (str): Colormap for the heatmap.
        output_file (str): Path to save the heatmap image. If None, it shows the plot.
    """
    plt.figure(figsize=(10, 8))
    plt.imshow(data, cmap=cmap, aspect='auto')
    plt.colorbar(label='Intensity')
    plt.title(title)
    plt.xlabel('Columns')
    plt.ylabel('Rows')

    # Save or show the heatmap
    if output_file:
        plt.savefig(output_file, dpi=300, bbox_inches='tight')
        print(f"Heatmap saved to {output_file}")
    else:
        plt.show()


if __name__ == "__main__":
    # Hexadecimal data
    hex_data = """
0BA70B970B9C0B8D0BA20BAD0B7E0BAD0BA50B900B9A0B720B990B830B800B9C0B860B9A0B8A0B8A0B9F0B8D0B720BB90B5E0B9F0B630BA20BD00BBA0B8A0C07
0B800BA80BAF0B990BA80B860B9B0B9A0B930B8A0B7D0B8D0BA40B8A0BB20BB90B8A0B8D0BA80B830BA60B7F0B820B860B7A0B710B960B930B750BB30B900BC5
0BB60BA90BA80B940B9B0B900B990B8D0B800BAA0BAB0BAE0B8C0B8C0BA20BB20BA50B840B9B0B8A0B9C0B8D0B8D0B9D0BA60BBA0B990BAF0BA80B8A0BAE0BB5
0BBA0BA80B9C0BBA0BB80BA90B990B710B9D0BB30BB40BAA0BC20BAE0B910B870BB50BB40B840B7E0B7E0B8A0B960B7C0B9A0B940B860B910BAB0B930BC80BD1
0BCA0BD80BF70BD40BE10BD70B920B820B8F0B9E0BDB0BD20BBC0BC00BCE0BC70BCC0BA00B9D0B7C0B9C0BAB0B8F0B860B6F0B9D0B860B860B8D0BB50BA00BB2
0BDA0BE10BC00BA80BD70BA30B7B0B7C0B770BA20BC20BAF0BBA0BA90BBA0BC10BA80BC80B9C0B9F0B750B840B810B8F0B840BA20BBC0B970B910B910B8A0BCD
0BA20BA30BB70BB00B920B960B7C0B820B680B950B760B950B810B6C0BB10B9D0B940B990B8A0B780B850B930B7F0B8A0B720B9B0BAC0BA10B760B910B910BB7
0B8A0B930B710B870B9C0B910B870B7A0B8C0B8B0B860B8A0B7A0B7E0B880B7A0B760B710B690B870B740B7A0B7F0B8A0B760B770B860B830BA50B720B9D0B8D
0B800B900BAF0B7C0BA00B870B7A0B9B0B830B7E0B860B7D0B840B7A0B880B880B830B900B7F0B7C0B860B990B8C0B870B6E0B9F0B8C0B860BA50B8D0B860B96
0B830B8F0B8A0B870B930B870B7B0B920B830B920B7F0B770B7A0B860B7E0B8F0B880B7B0B820B860B8A0B900B870B820B6D0B850B870B9B0B990B820BBD0BE4
0B9C0B810B7C0B7F0B870B8E0B880B900B7F0B9B0B960B930B820B860B860B8B0B930B6F0B8B0B860B740B8B0B880B7B0B980B9B0B910B810B7D0B8D0B820BB8
0B840B870B760B6F0B8A0B7E0B770B830B970BB60BA90BBF0BAA0B8F0B960B900B840B900B7C0B770B760B830B7A0B850B900B870B730B810B9F0B960BA50BBB
0B7A0B8F0B910B900B900B960B9A0B9F0BB40BB80BD80BC70BCE0BB10BA50B8F0B8A0B720B800B7A0B7E0B8D0B790B6B0B760B960B8E0B9A0BAB0B7C0BA80BBF
0B6E0BA40B850B850BA00B8D0BA00B970BAB0BE80BE00BEE0BD40BC20BCA0BAA0B860B840B900B750B800B8A0B820B810B8A0B930B870B9F0BB60BBE0B9B0BEF
0B980B730B7F0B820B850B9A0B9F0BA80BD80BFB0BFE0BE30BBF0B9F0BCA0BB90BAE0B7B0B880B840B780B8D0B8B0B8A0B990BA10B980B9F0BB20B960BD10BE1
0B840B760B750B870B900B900B9C0BC90BFD0BFA0BF60BEA0BBF0BAB0BB40BE30BBE0B970B920B8A0B900B8D0BB30BC20BB70BAE0BBB0BC20BC60B9F0BC50BD5
0B840B6E0B700B8A0B960B8D0BA30BCA0BFE0BEB0BDF0BDF0BDC0BBB0BDB0BE50BCA0BB10B860B990BAC0BB40BBD0BC60BCA0BB50BC40BC20BFD0BD90BCA0BE0
0B920B8E0B7D0B820B920B900BA10BBE0BD30BD10BDB0BF80BF90BFA0C030BF70BEA0BBC0BA80BAC0BC20BBC0BC40BC00BD00BC00BC70BCE0BCA0BD20BF80BE0
0B7E0B8E0B780B7E0B900B860B860BA20BB20BC60BCC0C010C100C0A0C0F0C050BF00BCD0BA20BCB0BD20BBF0BBC0BD70BDB0BD60BD20BD20BCB0C020C060BD8
0B720B7C0B7F0B8E0B950B920BA20B9B0BBD0BD60BEB0BFC0C090C0C0C060C0B0BFA0BE40BBA0BC50BD00BD60BD80BD10BDD0BE00BED0BED0BD80BC50BB90BEE
0B7A0B730B8C0B9A0B8A0B990B860B950BC40BE60BE40BF20C160C030C040BF60BFC0BEF0BCF0BCB0BD50BCD0BC50BC70BE20BDF0BD70BE30BF60BC20BC60BD6
0B870B970B990B7A0B950B9B0B9C0BA50BA90BC40BEF0BFC0BFD0BF90BFF0C060C0F0BFE0BEC0BCC0BCD0BD40BCA0BB10BC70BED0BF10BF00BD00BC90BD20BB4
0B730B870B8F0B910B8A0B900B960B8A0B970BAD0BC30BEF0BF40C050C030C0E0BFB0BFF0BEC0BE00BD80BD60BD50BD10BCF0BE00BC60BE70BC50BC40BCB0BD3
0B800B8C0B720B8E0B9F0B970B8D0B8A0B8A0B990BA30BB00BDD0BF60C000C090C010C080BEC0BD00BCA0BCB0BCD0BD20BBC0BBC0BB80BCF0BD60BDB0BCF0BC4
0B7D0B7A0B720B820B720B870B7E0B850B990B8B0B920B8D0BB20BAB0BDE0BF40C0A0BED0BDF0BD00BCF0BD40BB10BCD0BBF0BC00BE40BD70BE80BC50BD00BC7
0B750B990B6E0B7B0B8A0B820B930B990B8E0B8A0B960B920B930BA90BD80BD40BCD0BE00BD80BD90BC90BCC0BC40BB20BCB0BD90BBA0BFB0BE70BD90BC60BB9
0B820B7C0B800B710B7E0B790B7F0B870B9F0B900B960B940B930BA50BD10BEB0BCF0BD30BC00BDB0BD10BDB0BBC0BC30BD20BCB0BDE0BE90BC10BF60BDD0BAE
0B8A0B7B0B790B8A0B770BA50B7E0B7C0B8E0B8A0B870B740BAC0BB10BCD0BDB0BCA0BCD0BB70BC70BB40BBA0BE50BB50BD60BD80BC10BB60BAC0BBA0BA80BB8
0B950B770B7B0B8D0B800B8A0B8F0B820BA10B9B0B870B7D0BB30BB70BB70BD40BF40BC70BD20BD50BD50BC90BCD0BD20BDC0BAB0BEF0BDB0BF60BD90BEB0BC9
0B910BB20BB30B9D0BB10B9C0B920BB10B970B9A0B990BA60BB30BCA0BE50BE60BC10BED0BD80BCA0BD50BD60BBF0BDD0BD70BF80BEC0BDA0BE70BCC0BFF0BBF
0B7C0BA50B660B820B900B860B8D0B8A0B8A0B8C0B8F0BA50B9D0BB70BD50BD40BCD0BD40BCB0BEF0BDB0BD80BBA0BCC0BC80BD50BEB0BDB0BDA0BE20BC10BC0
0B960B920B990BAE0BA70B730B8A0B7F0B960B990BA50B980BA50BC30BCD0BD20BCF0BD70BBD0BC00BF50BBD0BE10BE40BF10BC50BBC0B9F0BB50BD80BC30B90
    """

    # Parse the data
    parsed_data = parse_hex_data(hex_data)

    # Plot the heatmap
    plot_heatmap(parsed_data, title="Parsed Heatmap")
